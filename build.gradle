plugins {
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "me.bristermitten.pdm" version "0.0.31"
}

apply plugin: 'java'

// naming
project.ext.majorVersion = '2'
project.ext.midVersion = '0'
project.ext.minorVersion = '4'
project.ext.versionType = 'SNAPSHOT'
version = project.ext.majorVersion + '.' + project.ext.midVersion + '.' + project.ext.minorVersion + "-" + project.ext.versionType
group = 'dev.spaceseries'

repositories {
    mavenCentral()
    jcenter()

    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://repo.codemc.org/repository/maven-public/' }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
    maven { url 'https://oss.sonatype.org/content/repositories/central/' }
    maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url 'https://repo.piggypiglet.me/repository/maven-releases/' }
    maven { url 'https://repo.yakovliam.com/snapshots/' }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // spigot
    compileOnly "org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT"

    // space api
    pdm 'dev.spaceseries:spaceapi:1.0.2-SNAPSHOT'

    // bStats
    // https://repo.codemc.org/repository/maven-public
    implementation "org.bstats:bstats-bukkit:1.7"

    // placeholderAPI
    compileOnly "me.clip:placeholderapi:2.10.9"

    // timeAPI
    pdm "me.piggypiglet:TimeAPI:1.9"
}

import org.apache.tools.ant.filters.ReplaceTokens

shadowJar {
    archiveName("SpaceChat-${version}.jar")

    relocate 'org.bstats.bukkit', "${group}.spacechat"

    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}


jar {
    manifest {
        attributes(
                'Main-Class': "${group}.spacechat.SpaceChat"
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

artifacts {
    archives shadowJar
}

jar.dependsOn project.tasks.getByName("pdm") //Always run the pdm task when we build. Alternatively, just run [gradle pdm build]